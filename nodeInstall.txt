  安装好nodejs以后,新建文件夹,起名叫demo-project,在文件夹根目录新建文件app.js作为nodejs应用的入口文件。
  打开终端（window上叫命令提示符）,进入demo-project根目录,输入以下命令并回车初始化package.json.
  输入命令
  		npm init

  		命令行会提示你输入项目名称name／版本version／描述description，都使用默认值（直接按回车）就好，输入完description后提示输入应用入口文件名entry point，如果你的入口文件名不叫app.js，输入对应的名称就好，否则一路回车到初始化完成。

  初始化完成后demo-project根目录会多出来一个package.json的文件，内容就像这样
	  {
	  "name": "node-project",
	  "version": "1.0.0",
	  "description": "",
	  "main": "app.js",
	  "scripts": {
	    "test": "echo \"Error: no test specified\" && exit 1"
	  },
	  "author": "",
	  "license": "ISC"
	}

	接下来安装express，express是一个基于nodejs平台的web开发框架

    输入命令
    	npm install express --save


	开启简单的服务

	express开启一个服务非常简单，分三步：引入express＝>实例化＝>监听端口

	//code
	var express = require('express'),
	    app = express(),
	    PORT = 3000;

	app.get('/', function(req, res){
	    res.send('Hello World');
	})

	app.listen(PORT, function(){
	    console.log('服务器已经启动～');
	})
	//code

	在终端输入node app.js启动服务


	打开浏览器访问：localhost:3000,页面成功打印出Hello World

	将app.js中的“Hello World”改成“你好，javascript”，按ctrl＋c停止服务然后再输入node app.js（或者直接按方向键⬆）回车重启服务，刷新浏览器，成功打印出“你好，javascript”，为了避免修改一次就重启一次服务这种无聊的事情，需要安装supervisor来监听文件改动自动重启服务

	npm install supervisor --save  // 局部安装,自测有问题
	 
	npm -g install supervisor  // 全局安装

	mac玩家安装失败请尝试在命令前面加sudo以管理员身份安装

	sudo npm install supervisor --save

	启用
		supervisor app.js