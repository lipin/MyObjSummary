看云地址:https://www.kancloud.cn/thinkphp/composer/35668 

composer init // 初始化默认信息(composer.json的信息)
composer install //安装composer.json中的依赖文件 如果有composer.lock文件则获取它的安装信息
composer update //依赖升级
composer update vendor/package vendor/package2 //单独升级某几个包
php composer update vendor/* // 批量升级
composer require //申明依赖
composer.phar require phpunit/phpunit:1.* // 申明phpunit依赖
composer.phar search monolog // 搜索monolog
composer.phar show //列出所有可用的软件包
php composer.phar show monolog/monolog // 显示详细信息
composer.phar depends  monolog/monolog // depends依赖检测,并列出相关依赖
php composer.phar validate // 检测composer.json是否有效
composer.phar status // 检测依赖包是否有修改
composer.phar self-update // 自我更新到最新的版本
composer config --list // 查看,更改配置
composer.phar create-project doctrine/orm path 2.2.* // create-project创建项目
composer.phar diagnose // 诊断问题
composer.phar help install //获取帮助

require 'vendor/autoload.php'; //引入composer安装生成的文件,自动加载


composer.json
{
    "name": "包名",
    "description": "描述",
    "keywords": "关键字,用于搜索",
    //引入的安装包
    "require": {
        "fzaninotto/faker": "^1.8"
    },
    //自动加载其他文件
    "autoload": {
        //psr-4文件加载,有命名空间 one
        "psr-4": {
            // 文件名\\: 文件夹路径(所有文件,需要命名空间)
            "bookLog\\": "bookLog"
        },
        //psr-4 two
        "psr-4": { "Monolog\\": ["src/", "lib/"] }
        //可以用 classmap 生成支持支持自定义加载的不遵循 PSR-0/4 规范的类库
        "classmap": ["src/", "lib/", "Something.php"]
        //文件加载,无命名空间,作为函数库的载入方式（而非类库）
        "files": [
            "comFunction/function.php"
        ]
    },
    //配置信息 (详情 https://docs.phpcomposer.com/04-schema.html )
    "config": {
        "process-timeout": 1800,
        "preferred-install": "dist"
    },
    //使用自定义的包资源库
    "repositories": {
        "packagist": {
          "type": "composer",
          "url": "https://packagist.phpcomposer.com"
        }
    }
}