CentOS6之前的版本和CentOS7重置密码不同具体请百度
CentOS7 :
	修改root密码:
		选择系统,看下面的提示,然后按e,
		编辑修改两处：ro改为rw,在LANG=en_US.UFT-8后面添加init=/bin/sh
		按Ctrl+X重启，并修改密码
			echo 123456 |passwd --stdin root
		由于selinux开启着的需要执行以下命令更新系统信息,否则重启之后密码未生效
            touch /.autorelabel
        重启系统
			exec /sbin/init
Tip: 
	min	:min
	test:123456
	root:123456ss
Folder:
	/bin 二进制可执行命令
	/dev 设备特殊文件
	/etc 系统管理和配置文件
	/etc/rc.d 启动的配置文件和脚本
	/home 用户主目录的基点，比如用户user的主目录就是/home/user，可以用~user表示
	/lib 标准程序设计库，又叫动态链接共享库，作用类似windows里的.dll文件
	/sbin 超级管理命令，这里存放的是系统管理员使用的管理程序
	/tmp 公共的临时文件存储点
	/root 系统管理员的主目录
	/mnt 系统提供这个目录是让用户临时挂载其他的文件系统
	/lost+found这个目录平时是空的，系统非正常关机而留下“无家可归”的文件（windows下叫什么.chk）就在这里
	/proc 虚拟的目录，是系统内存的映射。可直接访问这个目录来获取系统信息。
	/var 某些大文件的溢出区，比方说各种服务的日志文件
	/usr 最庞大的目录，要用到的应用程序和文件几乎都在这个目录

Commands :
 基本:
    halt  				//立刻关机 
    poweroff  			//立刻关机 
    shutdown -h now 	立刻关机(root用户使用) 
    shutdown -h 10 		10分钟后自动关机
	reboot 				// 重启
	netstat –apn   ;  netstat –apn | grep 8080 // 查看网络状态
	echo -> a.php       //清空a.php文件
	pwd 			    //获取当前路径
	mv  			    // 移动和重命名
	rm  				//删除 rm -r 删除文件和文件夹   rm -rf 删除文件和文件夹不用提示
	cp  				//复制
	whereis  abc   		// abc在哪里
	who i am 			// 显示当前登录的人
	/usr/bin:标准系统应用 /usr/local
	/usr/share:第三方应用 自己编译源码时可以指定安装位置。
	man yum     查看yum相关的帮助   info yum 获取yum的信息,包括网络信息
	yum --help  查看yum相关的帮助
		yum clean all #清除所有安装记录
		yum update #更新yum
	cat abc.php文件 查看abc.php文件
	more +100 abc.php 从100行开始显示  逐行显示
	less +100 abc.php 从100行开始显示  支持上下滚动查看

  挂载:
	mount                       ### 输出系统目前的挂载信息
    mount /dev/sda1 /mnt        ### 将 sda1 挂载到 /mnt 中
    cd /mnt                     ### 直接通过 /mnt 访问内容
    mount -o remount,rw  /mnt   ### 重新挂载 sda1 到 /mnt 并设置为 可读写 
    mount -a                    ### 挂载 fstab 文件配置好的文件系统

    umount /mnt                 ### 卸载 /mnt 这个挂载点的文件系统
    umount -a                   ### 卸载所有已挂载的文件系统 

 解压:
    tar 主要用于创建归档文件,和解压归档文件,其本身是没有压缩功能的,但可以调用 gzip bzip2 进行压缩处理.
		参数解释：
			-c 创建归档
			-x 解压归档
			-v 显示处理过程
			-f 目标文件，其后必须紧跟 目标文件
			-j 调用 bzip2 进行解压缩
			-z 调用 gzip 进行解压缩
			-t 列出归档中的文件

			eg:
			$ tar -cvf filename.tar .       ### 将当前目录所有文件归档,不压缩,后面有个.代表当前目录的意思 
			$ tar -xvf filename.tar         ### 解压 filename.tar 到当前文件夹
			$ tar -cvjf filename.tar.bz2 .  ### 使用 bzip2 压缩
			$ tar -xvjf  filename.tar.bz2   ### 解压 filename.tar.bz2 到当前文件夹
			$ tar -cvzf filename.tar.gz     ### 使用 gzip  压缩
			$ tar -xvzf filename.tar.gz     ### 解压 filename.tar.gz 到当前文件夹
			$ tar -tf   filename            ### 只查看 filename 归档中的文件，不解压
 分组权限:
	chown 用于改变一个文件的所有者及所在的组。
			chown user filename        ### 改变 filename 的所有者为 user
			chown user:group filename  ### 改变 filename 的所有者为 user，组为 group
			chown -R root folder       ### 改变 folder 文件夹及其子文件的所有者为 root


	chmod 永远更改一个文件的权限,主要有读取,写入,执行其中 所有者,用户组,其他 各占三个,因此 ls -l以看到如下的信息
	-rwxr--r-- 1 locez users   154 Aug 30 18:09 filename
	其中 r=read ， w=write ， x=execute
		  4			 2			1		
		chmod +x filename        ### 为 user ，group ，others 添加执行权限
		chmod -x filename        ### 取消 user ， group ，others 的执行权限
		chmod +w filename        ### 为 user 添加写入权限
		chmod ugo=rwx filename   ### 设置 user ，group ，others 具有 读取、写入、执行权限
		chmod ug=rw filename     ### 设置 user ，group 添加 读取、写入权限
		chmod ugo=--- filename   ### 取消所有权限

 查找:
 	find:
 	   find path -option parm [ -print ] [ -exec -ok command ] {} /;
 	   find /(查找范围) -name (查找内容) [-type d|-print]
 	   find /home -name test -type d  查找home下名字为test的文件目录
 	   find /home -name test -print   查找home下名字为test的文件
 	   find /home -name test		  查找home下名为test
 	   find /home -name *test* | test*	
		 	      -name filename              #查找名为filename的文件
				  -perm                       #按执行权限来查找
				  -user   username            #按文件属主来查找
				  -group groupname            #按组来查找
				  -mtime -n +n                #按文件更改时间来查找文件，-n指n天以内，+n指n天以前
				  -atime   -n +n              #按文件访问时间来查

		find   / -amin   -10       # 查找在系统中最后10分钟访问的文件
		find   / -atime -2         # 查找在系统中最后48小时访问的文件
		find   / -empty              # 查找在系统中为空的文件或者文件夹
		find   / -group cat        # 查找在系统中属于 groupcat的文件
		find   / -mmin -5         # 查找在系统中最后5分钟里修改过的文件
		find   / -mtime -1        #查找在系统中最后24小时里修改过的文件
		find   / -nouser             #查找在系统中属于作废用户的文件
		find   / -user   fred       #查找在系统中属于FRED这个用户的文件
	grep:
		在文本中查找
		grep a1 /home/test/t1.php  /home/test/t2.php  在t1.php,t2.php中查找a1
		grep a1 /home/test/t1.php    在/home/test/t1.php中查找a1
		grep -n a1 /home/test/t1.php    在/home/test/t1.php中查找a1
		grep -l  -option	path 		 	列出文件名(扯淡)
			 -n  -option	path 			显示行号
			 -v  -option	path			输出不是a1的
			 ^a1 			path 		 	^符号视作特殊字符,用于指定一行或者一个单词的开始
			 a1$ 			path 		 	以a1结尾的 $符号视作特殊字符,用于指定一行或者一个单词的结尾。
			 -r  -option	path      		递归去查找(文件夹)
			 ^ $   	path      				查找所有空行
			 -i  -option	path 			忽略大小写
			 -e a1 -e a1 -option	path    多个查找
			 -B 4 -option	path 			匹配行的前4行
			 -A 4 -option	path 			匹配行的后4行
			 -C 4 -option	path 			匹配行的前后4行

		ls	| gerp a1    					组合使用,在当前目录下查找 
		ls  | find a1	
	grep -option parm path ;    操作参数 路径
	find path -option parm ;    路径 	 操作参数
Vi Command	:
	wq! 强制保存退出
	:/a 文本中搜索a   n下一个  N上一个
	:nu 显示行号
	:set nu 全文显示行号 	set nonu 取消行号显示
	alt + u     撤销
	ctrl + u 删除一行
	u 撤回命令
Ngiux :
	1.开启目录访问权限 autoindex
	 在 /usr/local/ngiux/conf/ngiux.conf 添加
	location / 
	{   
        root /data/www/file                     //指定实际目录绝对路径；   
        autoindex on;                            //开启目录浏览功能；   
        autoindex_exact_size off;            //关闭详细文件大小统计，让文件大小显示MB，GB单位，默认为b；   
        autoindex_localtime on;              //开启以服务器本地时区显示文件修改日期！   
	}	
	2.域名添加 
	  在 /usr/local/ngiux/conf/vhost 新增 www.abc.com.conf 文件
	  要确保ngiux.conf 中有 include vhost/*.conf; 
	  内容如下:
		server
		    {
		        listen 80;  				// 监听的端口号
		        #listen [::]:80; 			//其他端口
		        server_name www.abc.com;	//域名
		        index index.html index.htm index.php default.html default.htm default.php; //默认进入的index
		        root  /home/wwwroot/min.com/Merchant;  // 网站目录

		        include other.conf;        //引入其他配置
		        #error_page   404   /404.html;  // 错误页面
		        location ~ [^/]\.php(/|$)
		        {
		            # comment try_files $uri =404; to enable pathinfo
		            try_files $uri =404;
		            fastcgi_pass  unix:/tmp/php-cgi.sock;
		            fastcgi_index index.php;
		            include fastcgi.conf;
		            #include pathinfo.conf;
		        }

		        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
		        {
		            expires      30d;
		        }

		        location ~ .*\.(js|css)?$
		        {
		            expires      12h;
		        }

		        access_log off;
		    }
PHP:
	 _1.php -m 查看php安装的扩展
     1.Redis: 不同的版本不一样具体百度
		 wgt:redis
	     cd redis-2.2.5 
	     /usr/local/php/bin/phpize         phpize用来扩展php扩展模块
	     ./configure --with-php-config=/usr/local/php/bin/php-config && make  && make install
	     php.ini 中添加 extension=redis.so



Mysql :
	_1.登陆
		 mysql -h localhost -u root -p    // mysql -h ('ip地址|localhost') -u ('用户名字,root') -p
	1.忘记root的登陆密码
		警告:首先确认服务器出于安全的状态，也就是没有人能够任意地连接MySQL数据库。 
			 因为在重新设置MySQL的root密码的期间，MySQL数据库完全出于没有密码保护的 
			 状态下，其他的用户也可以任意地登录和修改MySQL的信息。可以采用将MySQL对 
			 外的端口封闭，并且停止Apache以及所有的用户进程的方法实现服务器的准安全 
			 状态。最安全的状态是到服务器的Console上面操作，并且拔掉网线。 
		a.修改MySQL的登录设置： 
			# vi /etc/my.cnf 
			在[mysqld]的段中加上一句：skip-grant-tables    // 跳过授予表
			例如： 
			[mysqld] 
			datadir=/var/lib/mysql 
			skip-grant-tables 
			保存并且退出vi。 
		b.重新启动mysqld 
			# /etc/init.d/mysqld restart 
		c.登录并修改MySQL的root密码 
			 # /usr/bin/mysql 	
			 mysql> USE mysql ;  // 使用数据库
			 mysql>UPDATE user SET Password = password ( 'new-password' ) WHERE User = 'root' ;  //更改root的密码
			 mysql> flush privileges ;  // 重新加载权限表;更新权限
			 mysql> quit  // 退出
		 d．将MySQL的登录设置修改回来 
			 # vi /etc/my.cnf 
			 将刚才在[mysqld]的段中加上的skip-grant-tables删除 
			 保存并且退出vi。 
		e．重新启动mysqld 
			# /etc/init.d/mysqld restart 

----------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------
1.添加用户和密码
	adduser  test  
	useradd -m -g users -G audio -s /usr/bin/bash newuser     
     -m 创建home目录 -g 所属的主组 -G 指定该用户在哪些附加组 -s 设定默认的 shell,newuser 为新的用户名
	passwd  test
2.赋予root权限
	修改 etc/sudoers 
	方法一：找到下面一行，把前面的注释（#）去掉
	## Allows people in group wheel to run all commands
	%wheel    ALL=(ALL)    ALL
	然后修改用户，使其属于root组（wheel），命令如下：
	#usermod -g root tommy
	修改完毕，现在可以用tommy帐号登录，然后用命令 su - ，即可获得root权限进行操作。

	方法二：找到下面一行，在root下面添加一行，如下所示：
	## Allow root to run any commands anywhere
	root    ALL=(ALL)     ALL
	tommy   ALL=(ALL)     ALL
	修改完毕，现在可以用tommy帐号登录，然后用命令 su - ，即可获得root权限进行操作。
3.禁止root登陆
	vi /etc/ssh/sshd_config	
	PermitRootLogin no
