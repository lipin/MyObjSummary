_1.更新数据字段(数据集合)
	UPDATE m_o_survey_order  t1 INNER JOIN

	(SELECT
		o.id,
		GROUP_CONCAT(d.customer_name) AS customer_names
	FROM
		m_o_survey_order AS o
	LEFT JOIN m_o_survey_customer_detail AS d ON o.id = d.order_id
	WHERE
		o.customer_names = ''
	AND d.customer_name != ''
	GROUP BY
		o.id) t2 ON t1.id=t2.id SET t1.customer_names=t2.customer_names;
_2. str存在strlist中 
    FIND_IN_SET(str,strlist)
_3. 将查询结果插入到表中
	insert into tab (a,b,c) 
	select * from tab2
_4.查看表名的字段
	information_schema系统库(mysql相关的信息都能在系统库中找到)
	SELECT COLUMN_NAME FROM information_schema.COLUMNS where table_name = 'tab_name';	
_5.复制一张表
   CREATE TABLE abc AS
   SELECT * FROM test t 	会把test的结构和数据都会创建到abc中
_6.创建一张临时表
   CREATE TEMPORARY TABLE abc
   SELECT * FROM m_b_address

   SHOW CREATE TABLE abc;   #  查看创建表的sql
_7.查看表的列
   DESC cp_bets ; 	
   SHOW columns FROM  cp_bets ;
_8.explain sql语句 (查看sql语句,看索引是否生效)   
 
_9.触发器
   在创建表的时候可以运用触发器去操作另一张表的数据.
   触发器是基于行触发的，所以删除、新增或者修改操作可能都会激活触发器，
   所以不要编写过于复杂的触发器，
   也不要增加过得的触发器，这样会对数据的插入、修改或者删除带来比较严重的影响，
   同时也会带来可移植性差的后果，所以在设计触发器的时候一定要有所考虑。
_10.this is incompatible with sql_mode=only_full_group_by
	select version();  #查看版本信息 >5.7 -> 修改配置支持group 或者在字段前加上any_value
_11.mysql循环插入数据
	#创建任务
	CREATE PROCEDURE test_insert () 
		#开始
		BEGIN
			#定义变量 
			DECLARE i INT DEFAULT 1;
				#条件判断
				WHILE i<1000000 
				#执行
				DO 
					#SQL
					INSERT SQL ;
					#变量增加
					SET i=i+1;
				#结束循环 
				END WHILE ;
			#提交 
			commit; 
		#结束
		END;
	#执行
	CALL test_insert();	
_12.原生导出
	select * from `user` into outfile 't1.xls';	
	#如果无法运行在命令行查看
	#show variables like '%secure%';
	#如果secure_file_priv为null修改my.ini添加或者修改
	#secure-file-priv=  或者 secure-file-priv='保存导出的地址'
	#上面不填写的地址默认为mysql data的地址
	#保存 重启 执行